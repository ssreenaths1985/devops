server.connection-timeout=5000
server.tomcat.max-threads=2048
server.tomcat.min-spare-threads=20
server.tomcat.max-connections=15000
server.tomcat.accept-count=500
server.port={{ application_port }}

#spring data jpa for postgres
spring.datasource.jdbc-url={{ spring_datasource_jdbc_url }}
spring.datasource.username={{ postgresql_username_wingspan }}
spring.datasource.password={{ postgresql_password_wingspan }}

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false

#Workflow - Service details
wf.service.host={{ wf_service_host }}
wf.service.updateUserProfilePath=v1/workflow/updateUserProfileWF
wf.service.transitionPath=v1/workflow/transition

#Configuration for Multi Department Mapping for User
user.enable.multidept.mapping=false

#learner.service.url=learner-service:9000
sb.service.url=http://learner-service:9000/
sb.org.search.path=v1/org/search
sb.hub.graph.service.url=http://hub-graph-service:4013

spring.data.cassandra.sb.startupTimeoutInSeconds=100000
spring.data.cassandra.sb.contact-points={{ sunbird_cassandra_db_host }}
spring.data.cassandra.sb.port=9042
spring.data.cassandra.sb.keyspace-name={{ keyspace_sunbird }}
spring.data.cassandra.sb.username=
spring.data.cassandra.sb.password=

#sunbird.course.service.host=https://staging.open-sunbird.org/api/course/
sunbird.course.service.host={{ lms_service_host }}
lms.system.settings.path=v1/system/settings/get/PatchConfig
lms.user.read.path=private/user/v1/read/
lms.user.update.path=private/user/v1/update
progress.api.endpoint=v1/content/state/read
participants.api.endpoint=v1/batch/participants/list

sb.api.key={{ bearer_token }}

#ES
es.host={{ elasticsearch_host }}
es.port={{ elasticsearch_http_port }}
es.username={{ elasticsearch_username }}
es.password={{ elasticsearch_password }}
es.profile.index=userprofile
es.profile.index.type=_doc
workallocation.index.name=workallocation
workallocation.index.type=_doc
es.profile.source.fields=photo,id,employmentDetails,personalDetails

#Use alias names as Index names instead of actual index names
workallocationv2.index.name=work_allocation
workorder.index.name=work_order
workorder.index.type=_doc

#Kafka Server
spring.kafka.bootstrap.servers={{ kafka_servers_list }}

#kafka properties
kakfa.offset.reset.value=latest
kafka.max.poll.interval.ms=5000
kafka.max.poll.records=100

frac.host={{ frac_api_base }}/

domain.host.name=https://{{ domain_name }}/apis/public/v8/workallocation/getWaPdf/

#watTelemetryTopic
kafka.topics.wat.telemetry.event=watTelemetryTopic

kafka.topics.org.creation=orgCreation
kafka.topics.userrole.audit=userRoleAuditTopic
kafka.topics.parent.telemetry.event=dev.telemetry.raw
kafka.topics.userutility.telemetry.event=userLastLoginTopic
kafka.topics.wat.telemetry.event.topic.consumer=watTelemetryTopic-consumer
kafka.topics.user.registration.auto.createUser.consumer.group=userAutoRegistrationTopic-consumer
kafka.topics.user.registration.createUser.consumer.group=userRegistrationTopic-consumer
kafka.topics.user.registration.register.event.consumer.group=userRegistrationRegisterEventTopic-consumer

userutility.telemetry.event.pdata.id=dev.sunbird.cb.ext.service
userutility.telemetry.event.pdata.pid=sunbird-cb-ext-service
sunbird.cb.ext.version=4.0.1

org.create.endpoint=v1/org/create



#Cloud Storage Service properties

#Value for the type name should be “azure” in Tarento environments. In case of NIC environment it has to “cephs3”
cloud.storage.type.name={{ sb_cb_ext_cloud_storage_type }}

#Storage secret for for Azure or Cephs3
cloud.storage.secret={{ cloud_storage_secret }}

#Cloud storage folder – This needs to be the newly created cloud storage folder name
cloud.container.name={{ cloud_sb_cb_ext_container }}

#Endpoint for the Cephs3 environment. This can be empty in case Azure
cloud.storage.cephs3.endpoint={{ cloud_sb_cb_ext_endpoint }}

#Storage key for the Azure or Cephs3 
cloud.storage.key={{ cloud_storage_key }}



kafka.topics.parent.rating.event={{ rating_event_topic }}
redis.host.name={{ kp_redis_ip }}
redis.port=6379
#redis timeout value is in seconds
redis.timeout=84600

#Knowledge Base API Endpoints
km.base.host=http://knowledge-mw-service:5000/
km.base.framework.path=action/framework/v3/read/
km.base.composite.search.path=v1/search

#Taxonomy Framework and Category
igot.taxonomy.framework.name=igot
igot.taxonomy.category.name=Taxonomy

#FRAC EndPoints
frac.node.path=frac/addDataNodeBulk
frac.activity.path=frac/addDataNode
frac.search.path=frac/searchNodes
frac.node.source=WAT
frac.node.source.useDeptName=false

#Hierarchy end point
content-service-host=http://content-service:9000/
content-hierarchy-endpoint=content/v3/hierarchy
content-create-endpoint=content/v3/create
content-upload-endpoint=content/v3/upload/{identifier}
content-hierarchy-detail=v1/course/hierarchy/{courseId}?hierarchyType={hierarchyType}
#QR Code Properties
course.batch.create.endpoint=v1/course/batch/create
user.course.list=v1/user/courses/list/{userUUID}?orgdetails=orgName,email&licenseDetails=name,description,url&fields=contentType,topic,name,channel,mimeType,appIcon,gradeLevel,resourceType,identifier,medium,pkgVersion,board,subject,trackable,posterImage,duration,creatorLogo,license&batchDetails=name,endDate,startDate,status,enrollmentType,createdBy,certificates
user.course.enroll=v1/course/enroll

html.store.path=/tmp/htmlFiles
pdf.store.path=/tmp/pdfFiles
pdf.draft.template.name=workallocationdraft
pdf.published.template.name=workallocationpublished
content.default.channelId=0131397178949058560
content.default.orgId=igot-karmayogi
sunbird.telemetry.base.url=http://telemetry-service:9001/
sunbird.telemetry.endpoint=v1/telemetry
wat.telemetry.env=dev.mdo.portal
sunbird.user.search.endpoint=private/user/v1/search

#Cache Expire time in Seconds. Idle value - 86400 (i.e. everyDay)
cache.max.ttl=86400

#Assessment Feature values
assessment.host=http://assessment-service:9000/
assessment.hierarchy.read.path=questionset/v4/hierarchy/{identifier}?mode=edit
assessment.question.list.path=question/v4/list

#assessment.host=https://{{ domain_name }}/api/
#assessment.hierarchy.read.path=questionset/v1/hierarchy/{identifier}?hierarchy=detail
#assessment.question.list.path=question/v1/list

accesstoken.publickey.basepath=/keys/
course.url=https://{{ domain_name }}/app/toc/
overview.batch=/overview?batchId=0134907394218721281
sender.mail={{ igot_cb_ext_mailsender }}
notification.event.endpoint=/v1/notification/send/sync
notification.service.host=http://notification-service:9000
last.access.time.gap.millis=259200000

cassandra.config.host={{ sunbird_cassandra_db_host }}
user.registration.domain=
user.registration.dept.exclude.list=
user.registration.domain.name= {{user_reg_domain_name}}
user.registration.preApproved.domain={{preapproved_domain}}
user.registration.custodian.orgId={{reg_orgid}}

sunbird_cassandra_consistency_level=one

sb.es.host={{ sb_es_host }}
sb.es.port={{ sb_es_port }}
sb.es.username={{ sb_es_username }}
sb.es.password={{ sb_es_password }}
sb.es.user.profile.index=user_alias
es.user.auto.complete.search.fields=profileDetails.personalDetails.primaryEmail,profileDetails.personalDetails.firstname,profileDetails.personalDetails.surname
es.user.auto.complete.include.fields=lastName,maskedPhone,rootOrgName,roles,channel,prevUsedPhone,updatedDate,stateValidated,isDeleted,organisations,managedBy,countryCode,flagsValue,id,recoveryEmail,identifier,updatedBy,phoneVerified,locationIds,recoveryPhone,rootOrgId,userId,userSubType,prevUsedEmail,emailVerified,firstName,profileLocation,createdDate,framework,tncAcceptedOn,allTncAccepted,profileDetails,createdBy,phone,profileUserType,dob,userType,tncAcceptedVersion,status

kafka.topics.user.assessment.submit=dev.assessment.submit
content.search=v1/content/search
new.courses.scheduler.time.gap=168
new.courses.email.limit=10000
recipient.new.course.email=juhi.agarwal@tarento.com,reshma.prasad@tarento.com
search.fields=name,appIcon,instructions,description,purpose,mimeType,gradeLevel,identifier,medium,pkgVersion,board,subject,resourceType,primaryCategory,contentType,channel,organisation,trackable,license,posterImage,idealScreenSize,learningMode,creatorLogo,duration,version
sso.url=https://portal.igot-dev.in/auth/
sso.realm=sunbird
send.incomplete.courses.alert=false
send.latest.courses.alert=true
get.user.email.list.from.es=true
#search.fields=name,appIcon,instructions,description,purpose,mimeType,gradeLevel,identifier,medium,pkgVersion,board,subject,resourceType,primaryCategory,contentType,channel,organisation,trackable,license,posterImage,idealScreenSize,learningMode,creatorLogo,duration,version
email.search.fields=userId,profileDetails.personalDetails.primaryEmail
incompleteCourseAlertEmailKey=courseReminder
latestCourseAlertEmailKey=latestCourse


user.bulk.upload.email.template=bulkUploadNotification

# Need to specify the list of user emails which require to be notified for bulk upload.
# For iGOT Stage check with iGOT QA team.
# For NIC - need to provide NOC team email address.
user.bulk.upload.email.notification.list={{ bulk_upload_email_notification_list }}

user.bulk.upload.email.notification.subject=Request for bulk upload User!


#Course Alert Notifications
incomplete.course.alert.message.key=courseReminder
latest.course.alert.message.key=latestCourse

#Incomplete Course Alert Email
#Set the following property to true to enable incomplete course alert email
incomplete.courses.alert.enabled=false
incomplete.courses.alert.last.access.time.mills=259200000

#Latest Courses Alert Email Config
latest.courses.alert.enabled=true

#Provide a list of user emails which require to be sent the latest course email.
latest.courses.alert.user.email.list=

#Enable the following if you want to send the latest course email to all users.
latest.courses.alert.send.to.all.user=false

latest.courses.alert.content.limit=8
latest.courses.alert.search.user.fields=userId,profileDetails.personalDetails.primaryEmail
latest.courses.alert.search.content.fields=identifier,name,posterImage,duration,description

latest.courses.alert.email.subject=Check out exciting new courses that launched this week!

latest.courses.alert.scheduler.time.gap=100

latest.courses.alert.content.min.limit=1

sb.env.chiper.password={{cipher_password}}

sb.es.user.notification.preference.index=notify_preference

